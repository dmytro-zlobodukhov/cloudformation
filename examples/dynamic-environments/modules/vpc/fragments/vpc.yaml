AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a Multi-AZ, multi-subnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone. 
Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General
        Parameters:
          - EnvironmentName
      - Label:
          default: Availability Zone Configuration
        Parameters:
          - AvailabilityZones
          - NumberOfAZs
      - Label:
          default: Network Configuration
        Parameters:
          - VPCCIDR
          - PublicSubnetCIDR
          - PrivateSubnetCIDR
          - DatabaseSubnetCIDR
Parameters:
  EnvironmentName:
    Description: Name of environment to deploy
    Type: String
    Default: 'shared'
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Default: "us-west-2a, us-west-2b"
  NumberOfAZs:
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.
    Type: Number
    AllowedValues: [1, 2, 3]
    Default: 2
  VPCCIDR:
    Description: CIDR block for the VPC
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
  PublicSubnetCIDR:
    Description: CIDR blocks for public subnets
    Type: CommaDelimitedList
    Default: "10.0.0.0/20, 10.0.16.0/20"
  PrivateSubnetCIDR:
    Description: CIDR blocks for public subnets
    Type: CommaDelimitedList
    Default: "10.0.64.0/20, 10.0.80.0/20"
  DatabaseSubnetCIDR:
    Description: CIDR blocks for public subnets
    Type: CommaDelimitedList
    Default: "10.0.128.0/20, 10.0.144.0/20, 10.0.160.0/20"

Conditions:
  OneAvailabilityZone: !Or [!Equals [!Ref NumberOfAZs, 1], !Equals [!Ref NumberOfAZs, 2], !Equals [!Ref NumberOfAZs, 3]]
  TwoAvailabilityZones: !Or [!Equals [!Ref NumberOfAZs, 2], !Equals [!Ref NumberOfAZs, 3]]
  ThreeAvailabilityZones: !Equals [!Ref NumberOfAZs, 3]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'VPCCIDR'
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: 'default'
      Tags:
      - Key: Name
        Value: !Join ['-', ['vpc', !Ref EnvironmentName, '001']]
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['-', ['internet-gateway', !Ref EnvironmentName]]
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC


  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Condition: OneAvailabilityZone
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PublicSubnetCIDR]
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['public-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Condition: TwoAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PublicSubnetCIDR]
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['public-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Condition: ThreeAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref PublicSubnetCIDR]
      AvailabilityZone: !Select [2, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['public-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Condition: OneAvailabilityZone
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PrivateSubnetCIDR]
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['private-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Condition: TwoAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PrivateSubnetCIDR]
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['private-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Condition: ThreeAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref PrivateSubnetCIDR]
      AvailabilityZone: !Select [2, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['private-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Condition: OneAvailabilityZone
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref DatabaseSubnetCIDR]
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['database-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Condition: TwoAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref DatabaseSubnetCIDR]
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['database-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  DatabaseSubnet3:
    Type: AWS::EC2::Subnet
    Condition: ThreeAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref DatabaseSubnetCIDR]
      AvailabilityZone: !Select [2, !Ref AvailabilityZones]
      Tags:
        - Key: Name
          Value: !Join ['-', ['database-subnet', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Condition: OneAvailabilityZone
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['-', ['nat-eip', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Condition: TwoAvailabilityZones
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['-', ['nat-eip', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  NatGatewayEIP3:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Condition: ThreeAvailabilityZones
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['-', ['nat-eip', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  NatGateway1:
    Type: AWS::EC2::NatGateway
    Condition: OneAvailabilityZone
    Properties:
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Join ['-', ['nat', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Condition: TwoAvailabilityZones
    Properties:
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Join ['-', ['nat', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  NatGateway3:
    Type: AWS::EC2::NatGateway
    Condition: ThreeAvailabilityZones
    Properties:
      AllocationId: !GetAtt NatGatewayEIP3.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - Key: Name
          Value: !Join ['-', ['nat', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['public-route-table', !Ref EnvironmentName]]
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway


  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: OneAvailabilityZone
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: TwoAvailabilityZones
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: ThreeAvailabilityZones
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3


  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Condition: OneAvailabilityZone
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['private-route-table', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Condition: TwoAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['private-route-table', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Condition: ThreeAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['private-route-table', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Condition: OneAvailabilityZone
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Condition: TwoAvailabilityZones
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  DefaultPrivateRoute3:
    Type: AWS::EC2::Route
    Condition: ThreeAvailabilityZones
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway3


  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: OneAvailabilityZone
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: TwoAvailabilityZones
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: ThreeAvailabilityZones
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: !Ref PrivateSubnet3


  DatabaseRouteTable1:
    Type: AWS::EC2::RouteTable
    Condition: OneAvailabilityZone
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['database-route-table', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [0, !Ref AvailabilityZones]]]]]
  DatabaseRouteTable2:
    Type: AWS::EC2::RouteTable
    Condition: TwoAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['database-route-table', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [1, !Ref AvailabilityZones]]]]]
  DatabaseRouteTable3:
    Type: AWS::EC2::RouteTable
    Condition: ThreeAvailabilityZones
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['database-route-table', !Ref EnvironmentName, !Select [2, !Split ['-', !Select [2, !Ref AvailabilityZones]]]]]


  DefaultDatabaseRoute1:
    Type: AWS::EC2::Route
    Condition: OneAvailabilityZone
    Properties:
      RouteTableId: !Ref DatabaseRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  DefaultDatabaseRoute2:
    Type: AWS::EC2::Route
    Condition: TwoAvailabilityZones
    Properties:
      RouteTableId: !Ref DatabaseRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  DefaultDatabaseRoute3:
    Type: AWS::EC2::Route
    Condition: ThreeAvailabilityZones
    Properties:
      RouteTableId: !Ref DatabaseRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway3


  DatabaseSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: OneAvailabilityZone
    Properties:
      RouteTableId: !Ref DatabaseRouteTable1
      SubnetId: !Ref DatabaseSubnet1
  DatabaseSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: TwoAvailabilityZones
    Properties:
      RouteTableId: !Ref DatabaseRouteTable2
      SubnetId: !Ref DatabaseSubnet2
  DatabaseSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: ThreeAvailabilityZones
    Properties:
      RouteTableId: !Ref DatabaseRouteTable3
      SubnetId: !Ref DatabaseSubnet3


Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the database subnets
    Value: !Join 
      - ","
      - - !If [OneAvailabilityZone, !Ref PublicSubnet1, ""]
        - !If [TwoAvailabilityZones, !Ref PublicSubnet2, ""]
        - !If [ThreeAvailabilityZones, !Ref PublicSubnet3, ""]

  PrivateSubnets:
    Description: A list of the database subnets
    Value: !Join 
      - ","
      - - !If [OneAvailabilityZone, !Ref PrivateSubnet1, ""]
        - !If [TwoAvailabilityZones, !Ref PrivateSubnet2, ""]
        - !If [ThreeAvailabilityZones, !Ref PrivateSubnet3, ""]

  DatabaseSubnets:
    Description: A list of the database subnets
    Value: !Join 
      - ","
      - - !If [OneAvailabilityZone, !Ref DatabaseSubnet1, ""]
        - !If [TwoAvailabilityZones, !Ref DatabaseSubnet2, ""]
        - !If [ThreeAvailabilityZones, !Ref DatabaseSubnet3, ""]